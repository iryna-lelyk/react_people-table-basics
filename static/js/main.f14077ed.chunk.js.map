{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","classNames","NavBar","role","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isSelected","slug","name","born","died","sex","motherName","mother","fatherName","father","hasParent","parentName","parent","PeopleTable","useState","isLoading","setIsLoading","people","setPeople","hasError","setHasError","useParams","loadPeople","loadedPeople","map","find","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f14077ed.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n\n        <PageNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  isSelected: boolean,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, isSelected }) => {\n  const {\n    slug, name, born, died, sex,\n    motherName, mother, fatherName, father,\n  } = person;\n\n  const hasParent = (parentName: string | null, parent: Person | undefined) => {\n    if (parent) {\n      return (\n        <NavLink\n          to={`/people/${parent.slug}`}\n          className={classNames({\n            'has-text-danger': parent.sex === 'f',\n          })}\n        >\n          {parent.name}\n        </NavLink>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>{hasParent(motherName, mother)}</td>\n      <td>{hasParent(fatherName, father)}</td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeopleTable = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const { slug } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople.map(person => ({\n        ...person,\n        mother: loadedPeople.find(parent => parent.name === person.motherName),\n        father: loadedPeople.find(parent => parent.name === person.fatherName),\n      })));\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    person={person}\n                    key={person.slug}\n                    isSelected={person.slug === slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n\n            <Route path=\"/people\">\n              <Route index element={<PeopleTable />} />\n              <Route path=\":slug\" element={<PeopleTable />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}